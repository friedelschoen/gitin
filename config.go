package gitin

type ArchiveType int

/* Enums */
const (
	ArchiveTarGz ArchiveType = 1 << iota
	ArchiveTarXz
	ArchiveTarBz2
	ArchiveZip
)

type MainConfig struct {
	/* Site information settings */
	Sitename        string `conf:"name"`
	Sitedescription string `conf:"description"`
	Footertext      string `conf:"footer"`

	/* File and path settings */
	Favicon              string `conf:"favicon"`
	Favicontype          string `conf:"favicontype"`
	Logoicon             string `conf:"logoicon"`
	Stylesheet           string `conf:"stylesheet"`
	Colorscheme          string `conf:"colorscheme"`
	Splitdirectories     bool   `conf:"splitdirectories"`
	SplitdirectoriesAuto bool   `conf:"splitdirectories-auto"`

	Highlightcmd string `conf:"command/highlight"`
	Pandoccmd    string `conf:"command/pandoc"`

	/* Limits for commits and file sizes */
	Maxcommits  int `conf:"limit/commits"`
	Maxfilesize int `conf:"limit/filesize"`

	Archivezip    bool `conf:"archive/zip"`
	Archivetargz  bool `conf:"archive/tarball-gzip"`
	Archivetarxz  bool `conf:"archive/tarball-lzma"`
	Archivetarbz2 bool `conf:"archive/tarball-bzip2"`

	/* Files and output configurations */
	Tagatomfile string `conf:"files/tag-atom"`

	Clonepull string `conf:"clone/pull"`
	Clonepush string `conf:"clone/push"`

	Autofilelimit int `conf:"autofilelimit"`
	Configfile    string
}

/* Configuration keys for the configuration parser. */
var config MainConfig = MainConfig{

	/* --- Site information settings --- */

	/* The title of the site, which will be displayed in the HTML header or as the page title. */
	Sitename: "My Repositories",

	/* A description of the site, typically shown in metadata or as a subheading. */
	Sitedescription: "",

	/* Footer text that will appear at the bottom of every generated HTML page. */
	Footertext: "Generated by <i><code>gitin</code></i>!",

	/* --- File and path settings --- */

	/* Path to the config files */
	Configfile: "gitin.conf",

	/* Path to the favicon file, which will be used in the HTML output. */
	Favicon: "favicon.svg",

	/* The MIME type of the favicon file, indicating the type of image (SVG in this case). */
	Favicontype: "image/svg+xml",

	/* Path to the logo icon file, which will be displayed in the header of the HTML page. */
	Logoicon: "logo.svg",

	/* Path to the stylesheet (CSS file) used for styling the generated HTML. */
	Stylesheet: "style.css",

	/* Command to execute for highlighting syntax in files within the HTML output. The colorscheme will
	 * be substituted into this command. */
	Highlightcmd: "chroma --html --html-only --html-lines --html-inline-styles --style=$scheme --lexer=$type",

	Pandoccmd: "pandoc --from=$type --to=html",

	/* Color scheme to use for syntax highlighting in the HTML output. */
	Colorscheme: "pastie",

	/* Controls whether files are separated and written into individual directories or with each
	 * directory having its own HTML index. */
	Splitdirectories:     false,
	SplitdirectoriesAuto: false,

	/* --- Commit and log settings --- */

	/* Maximum number of commits to display in the log view. A value of -1 means no limit. */
	Maxcommits: -1,

	/* --- File size settings --- */

	/* Maximum file size (in bytes) that will be processed for syntax highlighting. Files larger than
	 * this size (1MB) will be skipped. */
	Maxfilesize: 1e+5, /* 1MB */

	/* --- Output file names --- */

	/* Name of the file used for Atom feeds of tags or branches. */
	Tagatomfile: "tags.xml",

	Autofilelimit: 100,

	Clonepull: "",
	Clonepush: "",
}

var pinfiles = []string{
	"README", "README.md", "CONTRIBUTING",
	"CONTRIBUTING.md", "CHANGELOG", "CHANGELOG.md",
	"LICENSE", "LICENSE.md", "COPYING",
	"COPYING.md", "CODE_OF_CONDUCT", "CODE_OF_CONDUCT.md",
	"SECURITY", "SECURITY.md",
}

var aboutfiles = []string{
	"README",
	"README.md",
	"README.rst",
}

var archivetypes []ArchiveType

var archiveexts = map[ArchiveType]string{
	ArchiveTarGz:  "tar.gz",
	ArchiveTarXz:  "tar.xz",
	ArchiveTarBz2: "tar.bz2",
	ArchiveZip:    "zip",
}
